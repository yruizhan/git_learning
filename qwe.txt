cout<<"hello world"<<endl;
第二次
第三次


git status 查看代码执行状态
git add ./***.cpp  将指定文件代码放到暂存区
git commit -m "代码修改信息"  提交代码并作说明
git user.name "***" 设置本地用户名
git user.email "****" 设置用户邮箱
git init 初始化本地仓库
git add ./添加仓库所有文件
git commit --all -m "这是说明"   将所有修改过的文件一次性放到房间里并添加说明
git log 查看提交记录
git log --oneline以时间线的方式查看提交记录，比较简洁
git reset --hard Head~0 回退到上次提交版本
git reset --hard 每次提交产生的标识符   回退到指定提交，也可用同样方法回到之前版本
git reflog 查看提交以及回退记录
git branch name 创建新分支
git branch 查看分支
git checkout name 切换到分支
git checkout master 切换回master分支
git merge name 吞并name分支，当合并出现冲突时，则只能手动去修改代码，然后再次提交
git branch -d name 删除name分支

GitHub不是git

提交代码到github
git push 

拿回代码
git pull [地址] master
git clone [地址] 会新建仓库名。多次执行会覆盖内容

ssh方式上传：可验证上传者身份
公钥 私钥两者有关联，，私钥自己留着，公钥上传网站
首先生成公钥和私钥：ssh-keygen -t rsa -C "1364601394@qq.com"

给远程仓库地址命名
git remote add origin SSH地址
git push origin master,可以方便简写，不用每次都写SSH地址
git push origin -u master，下次不用再写master,-u就是默认做了关联










